// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
using System;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Linq;
using DSS3_LogisticsPoolingForUrbanDistribution.BO;
using DSS3_LogisticsPoolingForUrbanDistribution.UI.Controllers.ErrorPage;
using AppCode;
using zAppDev.DotNet.Framework.Data;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Data.Domain;
using zAppDev.DotNet.Framework.Mvc;
using System.ComponentModel.DataAnnotations;
using DSS3_LogisticsPoolingForUrbanDistribution.UI.ViewModels.MasterPageSignIn;
using DSS3_LogisticsPoolingForUrbanDistribution.UI.Controllers.MasterPageSignIn;
namespace DSS3_LogisticsPoolingForUrbanDistribution.UI.ViewModels.ErrorPage
{
    public class ErrorPageViewModel : MasterPageSignInViewModel
    {
        public string ErrorMessage;
        public string StackTrace;
        public string FriendlyErrorMessage;
        public string AdditionalErrorInformation;


        public ErrorPageViewModel()
        {
        }


        public override void Evict()
        {
            var manager = MiniSessionManager.Instance;
        }

    }


    [OriginalType(typeof(DSS3_LogisticsPoolingForUrbanDistribution.UI.ViewModels.ErrorPage.ErrorPageViewModel))]
    public class ErrorPageViewModelDTO : MasterPageSignInViewModelDTO, IViewModelDTO<DSS3_LogisticsPoolingForUrbanDistribution.UI.ViewModels.ErrorPage.ErrorPageViewModel>
    {

        [JsonConstructor]
        public ErrorPageViewModelDTO() { }
        public ErrorPageViewModelDTO(DSS3_LogisticsPoolingForUrbanDistribution.UI.ViewModels.ErrorPage.ErrorPageViewModel original, bool parentIsDirty = false)  : base(original)
        {
            if (original == null) return;
            _runtimeType = original.GetType().FullName;
            ErrorMessage = original.ErrorMessage;
            StackTrace = original.StackTrace;
            FriendlyErrorMessage = original.FriendlyErrorMessage;
            AdditionalErrorInformation = original.AdditionalErrorInformation;
        }
        public string ErrorMessage;
        public string StackTrace;
        public string FriendlyErrorMessage;
        public string AdditionalErrorInformation;
        public new string _runtimeType
        {
            get;
            set;
        }
        public override string _originalTypeClassName => typeof(DSS3_LogisticsPoolingForUrbanDistribution.UI.ViewModels.ErrorPage.ErrorPageViewModel).FullName;

        public new DSS3_LogisticsPoolingForUrbanDistribution.UI.ViewModels.ErrorPage.ErrorPageViewModel GetModel()
        {
            var alreadySeenInstance = DTOHelper.GetSeenModelInstance<DSS3_LogisticsPoolingForUrbanDistribution.UI.ViewModels.ErrorPage.ErrorPageViewModel>(_clientKey, _originalTypeClassName, _baseClasses);
            if (alreadySeenInstance != null) return alreadySeenInstance;
            return new DSS3_LogisticsPoolingForUrbanDistribution.UI.ViewModels.ErrorPage.ErrorPageViewModel();
        }
        new  public DSS3_LogisticsPoolingForUrbanDistribution.UI.ViewModels.ErrorPage.ErrorPageViewModel Convert()
        {
            var original = GetModel();
            if (original == null)
            {
                original = new DSS3_LogisticsPoolingForUrbanDistribution.UI.ViewModels.ErrorPage.ErrorPageViewModel();
            }
            DTOHelper.UpdateSeenModelInstances(this, original);
            Hydrate(original);
            return original;
        }
        public void Hydrate(DSS3_LogisticsPoolingForUrbanDistribution.UI.ViewModels.ErrorPage.ErrorPageViewModel original)
        {
            if (original == null) return;
            base.Hydrate(original);
            original.ErrorMessage = ErrorMessage;
            original.StackTrace = StackTrace;
            original.FriendlyErrorMessage = FriendlyErrorMessage;
            original.AdditionalErrorInformation = AdditionalErrorInformation;
        }
    }



}
