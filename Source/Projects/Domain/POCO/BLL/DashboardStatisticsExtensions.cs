
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using System;
using System.Runtime.Serialization;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Reflection;
using System.Collections;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Configuration;
using zAppDev.DotNet.Framework.Data.Domain;

using DSS3_LogisticsPoolingForUrbanDistribution.DAL;

namespace DSS3_LogisticsPoolingForUrbanDistribution.BO
{
	/// <summary>
	/// The DashboardStatistics extensions
	/// </summary>
	public static class DashboardStatisticsExtensions
	{
        public static System.Collections.Generic.List<DSS3_LogisticsPoolingForUrbanDistribution.BO.DashboardStatistics> CalculatePoDStats(){using (new zAppDev.DotNet.Framework.Profiling.Profiler("DashboardStatistics", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "CalculatePoDStats")) {
System.Collections.Generic.List<DSS3_LogisticsPoolingForUrbanDistribution.BO.DashboardStatistics> wow = new System.Collections.Generic.List<DSS3_LogisticsPoolingForUrbanDistribution.BO.DashboardStatistics>();
DSS3_LogisticsPoolingForUrbanDistribution.BO.DashboardStatistics stats = new DSS3_LogisticsPoolingForUrbanDistribution.BO.DashboardStatistics();
stats.InFull = 0;stats.AsOrdered = 0;stats.OnTime = 0;System.Collections.Generic.List<DSS3_LogisticsPoolingForUrbanDistribution.BO.ProofOfDelivery> deliveries = new DSS3_LogisticsPoolingForUrbanDistribution.DAL.Repository().GetAll<DSS3_LogisticsPoolingForUrbanDistribution.BO.ProofOfDelivery>();
foreach (var delivery in deliveries ?? Enumerable.Empty<DSS3_LogisticsPoolingForUrbanDistribution.BO.ProofOfDelivery>()) {
stats.Supplier = (delivery?.OrderWMS?.OrdDepositorFullName ?? "");if ((delivery?.QuantityStatus == "In Full")) {
stats.InFull = (stats?.InFull ?? 0) + 1;}
if ((delivery?.QualityStatus == "As Ordered")) {
stats.AsOrdered = (stats?.AsOrdered ?? 0) + 1;}
if ((delivery?.DeliveryStatus == "On Time")) {
stats.OnTime = (stats?.OnTime ?? 0) + 1;}
}
stats.TotalDelivered = (deliveries?.Count() ?? 0);wow?.Add(stats);
return wow;
}
}



        
	}
}
