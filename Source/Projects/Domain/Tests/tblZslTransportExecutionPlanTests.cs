// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using System;
using System.Collections.Generic;
using System.Linq;
using NUnit.Framework;
using FluentNHibernate.Testing;
using DSS3_LogisticsPoolingForUrbanDistribution.BO;
using DSS3_LogisticsPoolingForUrbanDistribution.BoTesting.Tests.Common;
using DSS3_LogisticsPoolingForUrbanDistribution.DAL;

namespace DSS3_LogisticsPoolingForUrbanDistribution.BoTesting.Tests
{
    /// <summary>
    ///This is a test class for tblZslTransportExecutionPlanTest and is intended
    ///to contain all tblZslTransportExecutionPlanTest NUnit Tests
    ///</summary>
    [TestFixture]
    [Description("tblZslTransportExecutionPlan Repository Tests")]
    [Category("tblZslTransportExecutionPlan Repository Tests")]
    internal class tblZslTransportExecutionPlanTests : NHibernateFixture
    {
        /// <summary>
        ///A test for testing the persistence of an object from Db
        ///</summary>
        [Test]
        [Description("This tests the persistence of `tblZslTransportExecutionPlan`")]
        [Order(0)]
        public void tblZslTransportExecutionPlan_persistence_test()
        {
            DateTime now = DateTime.Now;
            // Get datetime without milliseconds
            now = new DateTime(now.Ticks - (now.Ticks % TimeSpan.TicksPerSecond), now.Kind);
            var _zanardobo_tblzslcarrier_tblzsltransportexecutionplan = new DSS3_LogisticsPoolingForUrbanDistribution.BO.tblZslCarrier
            {
                CarrierName = "tblZslCarrier_CarrierName",
            };
            var _zanardobo_tblzslplatformbookingorder_tblzsltransportexecutionplan = new DSS3_LogisticsPoolingForUrbanDistribution.BO.tblZslPlatformBookingOrder
            {
                BookingDate = now,
                OrderNo = "tblZslPlatformBookingOrder_OrderNo",
                NoIdentity = "tblZslPlatformBookingOrder_NoIdentity",
                FromExtTime = now,
                ToExtTime = now,
                BookStatus = "tblZslPlatformBookingOrder_BookStatus",
                NoPlatform = "tblZslPlatformBookingOrder_NoPlatform",
                NoCourier = "tblZslPlatformBookingOrder_NoCourier",
                Warehouse = "tblZslPlatformBookingOrder_Warehouse",
                Driver = "tblZslPlatformBookingOrder_Driver",
                DriverTelephone = "tblZslPlatformBookingOrder_DriverTelephone",
                Plate = "tblZslPlatformBookingOrder_Plate",
                Trailerplate = "tblZslPlatformBookingOrder_Trailerplate",
                PalletIN = 780,
                TotalPallet = 7780,
                DateArrived = now,
                TimeArrived = now,
                DateExit = now,
                TImeExit = now,
                RouteTracking_ID = 7596,
            };
            var _zanardobo_tblzsldeliverystatus_tblzsltransportexecutionplan = new DSS3_LogisticsPoolingForUrbanDistribution.BO.tblZslDeliveryStatus
            {
                DeliveryStatusName = "tblZslDeliveryStatus_DeliveryStatusName",
            };
            new PersistenceSpecification<DSS3_LogisticsPoolingForUrbanDistribution.BO.tblZslTransportExecutionPlan>(Session)
            .CheckProperty(p => p.Notes, "tblZslTransportExecutionPlan_Notes")
            .CheckProperty(p => p.ETA, now)
            .CheckProperty(p => p.ActualArrivalTime, now)
            .CheckReference(p => p.tblZslCarrier, _zanardobo_tblzslcarrier_tblzsltransportexecutionplan)
            .CheckReference(p => p.tblZslPlatformBookingOrder, _zanardobo_tblzslplatformbookingorder_tblzsltransportexecutionplan)
            .CheckReference(p => p.tblZslDeliveryStatus, _zanardobo_tblzsldeliverystatus_tblzsltransportexecutionplan)
            .VerifyTheMappings();
        }

        /// <summary>
        ///A test for testing the filtering of an object from Db
        ///</summary>
        [Test]
        [Description("This tests the filtering of `tblZslTransportExecutionPlan`")]
        [Order(1)]
        public void tblZslTransportExecutionPlan_filtering_test()
        {
            DateTime now = DateTime.Now;
            // Get datetime without milliseconds
            now = new DateTime(now.Ticks - (now.Ticks % TimeSpan.TicksPerSecond), now.Kind);
            var repo = new Repository(Session);
            List<DSS3_LogisticsPoolingForUrbanDistribution.BO.tblZslTransportExecutionPlan> results = null;
            Assert.DoesNotThrow(() =>
            {
                results = repo.GetAsQueryable<DSS3_LogisticsPoolingForUrbanDistribution.BO.tblZslTransportExecutionPlan>(
                              a => true
                              && (a.Notes != string.Empty && a.Notes != null)
                              && a.ETA.GetValueOrDefault().Date <= DateTime.UtcNow.Date
                              && a.ActualArrivalTime.GetValueOrDefault().Date <= DateTime.UtcNow.Date
                              && a.tblZslCarrier != null
                              && a.tblZslPlatformBookingOrder != null
                              && a.tblZslDeliveryStatus != null
                              ,
                              cacheQuery: true)
                          .OrderBy(a => a)
                          .Skip(0)
                          .Take(3)
                          .ToList();
            });
            Assert.AreNotEqual(null, results);
        }
    }
}